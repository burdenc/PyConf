#<-- This is a comment denoter
#Anything after a hash symbol is a comment and not parsed

#Below this comment is a section, it is used to categorize different items
#into similar groups. You can have PyConf track sections so that you can
#have two items with the same name in different sections. Or you can have
#PyConf ignore sections and just treat them as syntactic sugar.
[My_Section_Name] #<-- Comments can go after normal statements too

#Below are config items, items names and item values are separated by the =
#You can have any amount of leading whitespace, whitespace in before the =,
#whitespace after the =, and whitespace after the item value. However, no
#whitespace is allowed in the item values or names.
item 	=	blah
item2	=	blah2

item3	=	blah3
my_val	=	lol

[Section 2] #<-- Notice whitespace is allowed in section names

my_val	=	overwriten
#If you have PyConf set to not track sections, then my_val's value from above
#will be overwriten.

#Finally, you can set PyConf to track file names as well. So if you have it set
#to not track section names or file names, grabbing a file is as easy as:
#    my_obj.get_item('item')
#
#But if PyConf is tracking both section names and file names then it looks like:
#    my_obj.get_item('item', 'My_Section_Name', 'example.ini')